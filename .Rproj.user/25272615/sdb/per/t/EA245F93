{
    "collab_server" : "",
    "contents" : "\nlibrary(shiny)\nsource(\"helpers.R\")\n\n\n\nshinyServer(function(input, output, session) {\n\n  v <- reactiveValues(txt = get_quote(1), cnt = 0, idx = 1, active = c(97:122, 32), current_match = character(),\n                      sentence_out = character(), counts_out = numeric())\n  \n  update_all <- reactive({\n    key_press <- input$mydata[1]\n    valid_keys <- v$active\n    current_letter <- get_code(v$txt[v$idx])\n    \n    if(key_press %in% valid_keys && v$idx <= length(v$txt)) {\n      v$cnt <- v$cnt + 1 # increment counter on valid key_press\n      \n      if(key_press == current_letter) {\n        v$sentence_out[v$idx] <- get_letter(key_press) # populate correct guess in sentence_out\n        v$current_match <- get_letter(key_press) # populate curren_match letter\n        v$counts_out[v$idx] <- v$cnt # populate total count in counts_out\n        v$idx <- v$idx + 1 # increment sentence index\n        v$cnt <- 0 # return guess counter to 0\n        v$active <- c(97:122, 32)\n      } else {\n        v$active <- v$active[which(v$active != key_press)] # remove element from active\n      }\n      \n    } else {\n      return(NULL)\n    }\n  })\n  \n  output$available <- renderText(\n    avail_letter <- sapply(v$active, alt_get_letter)\n  )\n  \n  observeEvent(input$quote, {\n    # create loop to continue to next quote\n    rnum <- sample(1:10, 1)\n    v$txt <- get_quote(rnum)\n  })\n\n  observeEvent(v$txt, {\n    # txt <<- get_quote()\n    len <- length(v$txt)\n    session$sendCustomMessage(type = \"buildTable\", len)\n    v$cnt <- 0\n    v$idx <- 1\n    v$active <- c(97:122, 32)\n    v$current_match <- character()\n    v$sentence_out <- character(length(v$txt))\n    v$counts_out <- numeric(length(v$txt))\n    message <- list(idx = v$idx, cnt = v$cnt)\n    session$sendCustomMessage(type = \"editCount\", message)\n  })\n\n  observeEvent(input$mydata, {\n    update_all()\n  })\n  \n  observeEvent(v$cnt, {\n    message <- list(idx = v$idx, cnt = v$cnt, cnts = v$counts_out)\n    session$sendCustomMessage(type = \"editCount\", message)\n  })\n  \n  observeEvent(v$sentence_out, {\n    message <- list(letter = v$current_match, idx = v$idx)\n    session$sendCustomMessage(type = \"editTable\", message)\n  })\n  \n  observeEvent(v$idx, {\n    message <- list(idx = v$idx, cnts = v$counts_out)\n    session$sendCustomMessage(type = \"fixCount\", message)\n  })\n  \n\n})\n",
    "created" : 1458241756608.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1207858096",
    "id" : "EA245F93",
    "lastKnownWriteTime" : 1459724453,
    "last_content_update" : 0,
    "path" : "~/Development/susan/probability/shannon/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}